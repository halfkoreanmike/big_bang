.k3d_before_script: &k3d_before_script
  # Starting dnsmasq for cluster dns resolution
#  - docker run -d -p 53:53/udp -p 53:53 registry.dsop.io/platform-one/big-bang/pipeline-templates/pipeline-templates/go-dnsmasq:0eddd476
#  - echo "nameserver 127.0.0.1" >> /etc/resolv.conf
  # Standup cluster
  - k3d cluster create ${CLUSTER_NAME}  --k3s-server-arg "--disable=traefik" --k3s-server-arg "--disable=metrics-server" -p 80:80@loadbalancer -p 443:443@loadbalancer --wait --agents $N_AGENTS --servers $N_SERVERS
  - while ! (kubectl get node | grep "server" > /dev/null); do sleep 3; done
  - kubectl get nodes
  - k3d node list

.k3d_after_script: &k3d_after_script
  - k3d cluster delete ${CLUSTER_NAME}

.k3d:
  image: registry.gitlab.com/gitlab-org/cluster-integration/helm-install-image/releases/3.2.4-kube-1.16.15-alpine-3.12
#  services:
#    - registry.dsop.io/platform-one/big-bang/pipeline-templates/pipeline-templates/docker:dind
  services:
    - name: registry.gitlab.com/gitlab-org/cluster-integration/test-utils/k3s-gitlab-ci/releases/v1.19.3-k3s1:latest
      alias: k3s
  tags:
    - bigbang
    - privileged
    - dogfood
  variables:
    DOCKER_HOST: tcp://dind:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    CLUSTER_NAME: ${CI_COMMIT_REF_SLUG}
    N_SERVERS: 1
    N_AGENTS: 0
  before_script:
    - apk add curl
    - mkdir -p ~/.kube
    - curl -f k3s:8081?service=k3s > ~/.kube/config
    - cat ~/.kube/config
    - kubectl version
    - kubectl cluster-info
  #    - *k3d_before_script
#  after_script:
#    - *k3d_after_script