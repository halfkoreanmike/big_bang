.do_some_quick_tests: &do_some_quick_tests
  # Place kubernetes package test here
  - echo "Package tests go here"
  - bash ./tests/virtualservices.sh
  - kubectl get helmrelease -A

include:
  - project: 'platform-one/big-bang/pipeline-templates/umbrella-templates'
    ref: BB-621-Network-Up
    file: '/global.gitlab-ci.yml'

stages:
  - smoke tests
  - network up
  - cluster up
  - bigbang up
  - test
  - bigbang down
  - cluster down
  - network down

.bigbang:
  image: registry.dsop.io/platform-one/private/big-bang/pipeline-templates/k3d-builder:b0b45793

.deploy_bigbang: &deploy_bigbang
  # Deploy flux and wait for it to be ready
  - flux --version
  - flux install
  - kubectl get namespaces,pods,gitrepositories,helmrelease -A

  # Deploy BigBang
  - helm upgrade -i bigbang chart -n bigbang --create-namespace --set registryCredentials.username='robot$bigbang' --set registryCredentials.password=${REGISTRY1_PASSWORD}
  - kubectl apply -f examples/complete/envs/dev/source-secrets.yaml

  # Wait for components to be ready
  # NOTE: Wait for each package individually so they show up nicely in ci logs
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang gatekeeper
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang istio-operator
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang istio
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang monitoring
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang eck-operator
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang ek
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang fluent-bit
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang twistlock
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang cluster-auditor
  - kubectl wait --for=condition=Ready --timeout 30s kustomizations.kustomize.toolkit.fluxcd.io -n bigbang secrets

  # Quick check for non iron bank images
  - echo "Showing images not from ironbank:"
  # Ignore rancher images since those are from k3d
  - kubectl get pods -A -o jsonpath="{..image}" | tr -s '[[:space:]]' '\n' | sort | uniq -c | grep -v "registry1" | grep -v "rancher"

    # Basic smoke test BigBang
#    - echo "Package tests go here"
#    - bash ./tests/virtualservices.sh

fetch umbrella templates:
  stage: .pre
  extends:
    - .fetch

clean install:
  stage: smoke tests
  extends:
    - .k3d
  variables:
    CLUSTER_NAME: "clean-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
  script:
    - *deploy_bigbang

upgrade:
  stage: smoke tests
  extends:
    - .k3d
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  variables:
    CLUSTER_NAME: "clean-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
  script:
    - echo "Install Big Bang from ${CI_DEFAULT_BRANCH}"
    - git fetch && git checkout ${CI_DEFAULT_BRANCH}
    - *deploy_bigbang

    - echo "Upgrade Big Bang from ${CI_COMMIT_BRANCH}"
    - git checkout ${CI_COMMIT_BRANCH}
    - *deploy_bigbang

.manual trigger on merge requests:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
      allow_failure: true

.post manual trigger on merge requests:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      allow_failure: false

#
# Network
#
aws standard create:
  stage: network up
  extends:
    - .manual trigger on merge requests
    - .network up

#  environment:
#    name: $CI_COMMIT_BRANCH
#    url: https://$PROJ_NAME.bigbang.dev
#    on_stop: destroy
#    auto_stop_in: 4 hours
##
##
## Cluster(s) up
##
#rke2 up:
#  stage: cluster up
#  extends:
#    - .rke2 up
#  variables:
#    TFVARFILE: ${CI_PROJECT_DIR}/${TF_ROOT}/var.tfvars
##
##
## BigBang Up
##
#rke2|bigbang up:
#  extends:
#    - .bigbang
#  stage: bigbang up
#  dependencies:
#    - rke2 up
#  before_script:
#    - mkdir -p ~/.kube
#    - cp ${CI_PROJECT_DIR}/rke2.yaml ~/.kube/config
#    - kubectl apply -f .gitlab/k8s-resources/default-ebs-sc.yaml
#  script:
#    - *deploy_bigbang
#  after_script:
#    - kubectl get all -A
#
##
## E2E Tests
##
#rke2|bigbang test:
#  stage: test
#  script:
#    - echo "tests go here"
#  dependencies:
#    - rke2 up
#
##
## BigBang Down
##
#rke2|bigbang down:
#  extends:
#    - .bigbang
#  stage: bigbang down
#  dependencies:
#    - rke2 up
#  before_script:
#    - mkdir -p ~/.kube
#    - cp ${CI_PROJECT_DIR}/rke2.yaml ~/.kube/config
#  script:
#    - helm un -n bigbang bigbang
#
#    # TODO: Smarter wait
#    - sleep 180
#  after_script:
#    - kubectl get all -A
#  when: always
#
##
## Cluster(s) down
##
#rke2 down:
#  stage: cluster down
#  extends:
#    - .rke2 down
#  when: always
#
#
# Network down
#
aws standard cleanup:
  stage: network down
  extends:
    - .post manual trigger on merge requests
    - .network down
#  environment:
#    name: $CI_COMMIT_BRANCH
#    action: stop
  when: always
