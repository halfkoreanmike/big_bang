{{- if and .Values.istio.enabled ( or .Values.addons.authservice.enabled .Values.istio.sso.enabled ) }}
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authservice
  namespace: {{ .Release.Namespace }}
spec:
  targetNamespace: istio-system
  chart:
    spec:
      chart: {{ .Values.addons.authservice.git.path }}
      interval: 5m
      sourceRef:
        kind: GitRepository
        name: authservice
        namespace: {{ .Release.Namespace }}

  {{- with .Values.flux }}
  interval: {{ .interval }}
  test:
    enable: false
  install:
    remediation:
      retries: {{ .install.retries }}
  upgrade:
    remediation:
      retries: {{ .upgrade.retries }}
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: {{ .rollback.timeout }}
    cleanupOnFail: {{ .rollback.cleanupOnFail }}
  {{- end }}

  valuesFrom:
    - name: values
      kind: Secret
      valuesKey: "authservice.yaml"
  values:
    imagePullSecrets:
      - name: private-registry
    global:
      oidc:
        host: {{ .Values.sso.oidc.host }}
        realm: {{ .Values.sso.oidc.realm }}
      {{- if .Values.sso.jwks }}
      jwks: "{{ .Values.sso.jwks }}"
      {{- end }}
      client_id: {{ .Values.sso.client_id }}
      client_secret: {{ .Values.sso.client_secret }}
      certificate_authority: {{ .Values.sso.certificate_authority }}
    chains:
    {{- if .Values.istio.sso.enabled }}
      kiali:
        match:
          header: ":authority"
          prefix: "kiali"
        client_id: {{ .Values.istio.sso.kiali.client_id }}
        callback_uri: https://kiali.{{ .Values.hostname }}/login
      jaeger:
        match:
          header: ":authority"
          prefix: "tracing"
        client_id: "{{ .Values.istio.sso.jaeger.client_id }}"
        callback_uri: https://tracing.{{ .Values.hostname }}/login
      prometheus:
        match:
          header: ":authority"
          prefix: "prometheus"
        client_id: {{ .Values.monitoring.sso.prometheus.client_id }}
        callback_uri: https://prometheus.{{ .Values.hostname }}/
      {{- end }}
    filterLabel: keycloak
  dependsOn:
  - name: istio
    namespace: {{ .Release.Namespace }}
{{- end }}