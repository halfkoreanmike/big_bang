{{- if .Values.istio.sso.enabled }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.istio.sso.namespace }}
  labels:
    istio-injection: enabled
---
{{- if and (ne .Values.registryCredentials.username "") (ne .Values.registryCredentials.password "") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: {{ .Values.istio.sso.namespace }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ template "imagePullSecret" . }}
{{- end }}
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: haproxy
  namespace: {{ .Release.Namespace }}
spec:
  targetNamespace: {{ .Values.istio.sso.namespace }}
  chart:
    spec:
      chart: "./chart"
      interval: 5m
      sourceRef:
        kind: GitRepository
        name: haproxy
        namespace: {{ .Release.Namespace }}

  {{- with .Values.flux }}
  interval: {{ .interval }}
  test:
    enable: false
  install:
    remediation:
      retries: {{ .install.retries }}
  upgrade:
    remediation:
      retries: {{ .upgrade.retries }}
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: {{ .rollback.timeout }}
    cleanupOnFail: {{ .rollback.cleanupOnFail }}
  {{- end }}

  values:
    hostname: {{ .Values.hostname }}
    hosts:
    - kiali
    - tracing

    podLabels:
      protect: keycloak
    config: |
      global
        maxconn 1024
        daemon
        log stdout format raw local0 info
      defaults
        log global
        mode http
        option httplog
        timeout client 60s
        timeout connect 60s
        timeout server 60s
      frontend fe_main
        bind :8080
        acl host_kiali hdr(host) -i kiali.{{ .Values.hostname }}
        acl host_tracing hdr(host) -i tracing.{{ .Values.hostname }}
        option forwardfor
        use_backend kiali_main if host_kiali
        use_backend tracing_main if host_tracing
      backend kiali_main
        mode http
        server kiali kiali.istio-system.svc.cluster.local:20001
      backend tracing_main
        mode http
        server jaeger tracing.istio-system.svc.cluster.local:80
    image:
      repository: registry1.dsop.io/ironbank/opensource/haproxy/haproxy22
    containerPorts:
      http: 8080
  dependsOn:
    - name: authservice
      namespace: {{ .Release.Namespace }}
    - name: istio
      namespace: {{ .Release.Namespace }}
{{- end }}
