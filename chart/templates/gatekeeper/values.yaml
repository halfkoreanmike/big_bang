{{- if or .Values.gatekeeper.enabled .Values.clusterAuditor.enabled }}
{{- include "values-secret" (dict "root" $ "package" (dict "values" (fromYaml (include "bigbang.overlays.gatekeeper" .))) "name" "gatekeeper" "defaults" (include "bigbang.defaults.gatekeeper" .)) }}
{{- end }}

{{- define "bigbang.defaults.gatekeeper" -}}
image:
  pullSecrets:
  - name: private-registry
postInstall:
  labelNamespace:
    enabled: false
    image:
      pullSecrets:
      - name: private-registry
postUpgrade:
  cleanupCRD:
    image:
      pullSecrets:
      - name: private-registry

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
violations:  # Try to keep this in alpha order to make it easier to find keys

  allowedDockerRegistries:
    parameters:
      repos:
        - registry1.dso.mil
        - registry.dso.mil
      {{- if .Values.addons.mattermost.enabled }}
      excludedResources:
        # Mattermost needs postgres:13 image and cannot override the upstream
        - mattermost/init-check-database
      {{- end }}

  {{- if or .Values.monitoring.enabled .Values.fluentbit.enabled }}
  allowedHostFilesystem:
    {{- if .Values.monitoring.enabled }}
    match:
      excludedNamespaces:
        # Prometheus-node-exporter needs access to host to get node metrics
        - monitoring
    {{- end }}
    {{- if .Values.fluentbit.enabled }}
    parameters:
      excludedResources:
        # Fluentbit pods need access to host to get log files
        - logging/logging-fluent-bit-.*
    {{- end }}
  {{- end }}

  {{- if .Values.addons.mattermost.enabled }}
  httpsOnly:
    match:
      excludedNamespaces:
        # Mattermost currently does not useIngressTLS hence Ingress is created without TLS field by the operator.
        # Adding exemption, pending https://github.com/mattermost/mattermost-operator/issues/235
        - mattermost
  {{- end }}

  namespacesHaveIstio:
    enabled: {{ .Values.istio.enabled }}

  {{- if .Values.logging.enabled }}
  noPrivilegedContainers:
    match:
      excludedNamespaces:
        # Fluentbit needs privileged to read and store the buffer for tailing logs from the nodes
        - logging
  {{- end }}

  podsHaveIstio:
    enabled: {{ .Values.istio.enabled }}
    match:
      excludedNamespaces:
        # Istio does not inject sidecars in itself
        - istio-operator
        - istio-system

  {{- if .Values.monitoring.enabled }}
  restrictedTaint:
    match:
      excludedNamespaces:
        # Prometheus Node Exporter needs to be able to run on all nodes, regardless of taint, to gather node metrics
        - monitoring
  {{- end }}

  {{- if .Values.logging.enabled }}
  selinuxPolicy:
    match:
      excludedNamespaces:
        # FluentBit needs selinux option type spc_t
        - logging
  {{- end }}

  {{- if or .Values.fluentbit.enabled (or .Values.twistlock.enabled .Values.monitoring.enabled) }}
  volumeTypes:
    match:
      excludedNamespaces:
       {{- if .Values.fluentbit.enabled }}
        # fluent-bit container requires certain host level access to ship logs and for keep track of state
        # https://docs.fluentbit.io/manual/pipeline/filters/kubernetes#workflow-of-tail-kubernetes-filter
        - logging
       {{- end }}
       {{- if .Values.twistlock.enabled }}
        # Twistlock requires /dev/log for its syslog daemon.
        # https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin-compute/audit/logging.html#
        - twistlock
       {{- end }}
       {{- if .Values.monitoring.enabled }}
        # Prometheus node exported requires hostpath hardcoded in upstream chart on which monitoring pkg has a direct dependency
        # https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-node-exporter/templates/daemonset.yaml#L150
        - monitoring
       {{- end }}
  {{- end }}
{{- end -}}


{{- /* This function merges defaults in lists from above into overlays */ -}}
{{- /* The end user will not have to replicate exclusions/repos from above when providing an overlay */ -}}
{{- /* There is a hidden flag `skipOverlayMerge` that can be added to any constraint to ignore the defaults */ -}}
{{- define "bigbang.overlays.gatekeeper" }}
  {{- $defaults := fromYaml (include "bigbang.defaults.gatekeeper" .) }}
  {{- $overlays := dig "values" dict .Values.gatekeeper }}
  {{- range $constraint, $default := $defaults.violations }}
    {{- $overlay := (dig "violations" $constraint dict $overlays) }}
    # Only continue if an overlay matches a default constriant and hidden "skipOverlayMerge" is not set
    {{- if and $overlay (not $overlay.skipOverlayMerge) }}
      # Add any default excludedNamespaces to overlay
      {{- if and (dig "match" "excludedNamespaces" list $default) (dig "match" "excludedNamespaces" list $overlay) }}
         {{ $_ := set $overlay.match "excludedNamespaces" (concat $default.match.excludedNamespaces $overlay.match.excludedNamespaces) }}
      {{- end }}
      # Add any default excludedResources to overlay
      {{- if and (dig "parameters" "excludedResources" list $default) (dig "parameters" "excludedResources" list $overlay) }}
         {{ $_ := set $overlay.parameters "excludedResources" (concat $default.parameters.excludedResources $overlay.parameters.excludedResources) }}
      {{- end }}
      # Special case to add registries for allowed registries to overlay
      {{- if and (dig "parameters" "repos" list $default) (dig "parameters" "repos" list $overlay) }}
         {{ $_ := set $overlay.parameters "repos" (concat $default.parameters.repos $overlay.parameters.repos) }}
      {{- end }}
    {{- end }}
  {{- end }}
{{ toYaml $overlays }}
{{- end }}